# LaundryHub Complete Setup Checklist

## ✅ Development Tasks Completed
1. Design appropriate data flow in the frontend for the orders and modify the existing flow ✓
2. Stale orders will get deleted ✓
3. Notification system implemented ✓
   - Order accepted ✓
   - Stale orders rejection and deletion ✓
   - Order delivered ✓
   - Delivery date changed ✓

## ✅ Environment Setup Checklist

### Backend Environment Variables
- [ ] `MONGO_URI` - MongoDB connection string
- [ ] `ACCESS_TOKEN_SECRET` - JWT secret key (generate strong random string)
- [ ] `RAZORPAY_KEY_ID` - From Razorpay dashboard
- [ ] `RAZORPAY_SECRET` - From Razorpay dashboard
- [ ] `PORT` - Backend port (default: 4000)
- [ ] `NODE_ENV` - Environment mode (development/production)

### Frontend Environment Variables
- [ ] `VITE_DEV_ENV` - Set to "development"
- [ ] `VITE_RAZORPAY_KEY_ID` - Same as backend RAZORPAY_KEY_ID
- [ ] `VITE_EMAILJS_SERVICE_ID` - EmailJS service ID (optional)
- [ ] `VITE_EMAILJS_TEMPLATE_ID` - EmailJS template ID (optional)
- [ ] `VITE_EMAILJS_PUBLIC_KEY` - EmailJS public key (optional)

## ✅ Installation Checklist
- [x] Backend dependencies installed
- [x] Frontend dependencies installed
- [x] Environment files created
- [ ] MongoDB connection configured
- [ ] Razorpay integration configured

## ✅ Testing Checklist
- [ ] Database connection: `npm run test-db` in backend
- [ ] Razorpay integration: `npm run test-razorpay` in backend
- [ ] Backend server: `npm run dev` in backend
- [ ] Frontend server: `npm run dev` in frontend
- [ ] Access: http://localhost:5173

## ✅ Quick Start Commands
```bash
# Backend
cd backend
npm run dev

# Frontend (new terminal)
cd frontend
npm run dev
```